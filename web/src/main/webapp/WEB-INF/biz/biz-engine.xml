<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
					http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
					http://www.springframework.org/schema/context 
					http://www.springframework.org/schema/context/spring-context-2.5.xsd
					http://www.springframework.org/schema/tx
					http://www.springframework.org/schema/tx/spring-tx-2.5.xsd"
	default-autowire="byName">
	
	<!-- 为了配合junit单元测试，只能在该xml冗余增加包扫描 -->
	<context:annotation-config/>												
	<context:component-scan base-package="com.alibaba.webx.*"/>
	
	<!--.....................................-->
	<!-- 降级开关                                                                                        -->
	<!--.....................................-->
	<bean id="mySwitchUtil" class="com.alibaba.webx.searchengine.util.switchs.MySwitchUtil">
		<property name="EMAIL_LOG_SWITCH">				<value>true</value>		</property>	<!-- 邮件日志功能开关 -->
		<property name="DEMO_SWITCH">					<value>true</value>		</property>	<!-- 测试所用 -->
		<property name="EMAIL_SYSTEM_MONITOR_SWITCH">	<value>false</value>	</property>	<!-- 邮件系统级异常开关 -->
	</bean>
	
	
	<!--.....................................-->
	<!--.................mail................-->
	<!--.....................................-->
	<bean id="mailFactory" class="com.alibaba.webx.searchengine.factory.mail.MailFactory" init-method="init">
		<property name="defaultMailServerHost">		<value>smtp.qq.com</value> 		</property>	<!-- 邮件服务地址 -->
		<property name="defaultMailServerPort">		<value>25</value> 				</property>	<!-- 端口号 -->
		<property name="defaultSenderAddress">		<value>xxx@qq.com</value> 		</property> <!-- 用来发送邮件的账号 -->
		<property name="defaultPassword">			<value>xxxxxxx</value> 			</property>	<!-- 账号对应的密码 -->
	</bean>
	
	
	<!--.....................................-->
	<!--..............logUtils...............-->
	<!--.....................................-->
	<bean id="loggerUtils" class="com.alibaba.webx.searchengine.util.log.LoggerUtils"  init-method="init">
		<!-- 要把错误推送给哪些邮箱 -->
		<property name="acceptorList">													
			<list>
				<value>xxx@163.com</value>
			</list>			
		</property>	
		<property name="emailTitle">	<value>XXX项目代码级错误日志推送</value>	</property>	<!-- 邮件标题 -->
		<property name="sendEmailRate">	<value>3000</value>						</property>	<!-- 多少秒发一次邮件 -->
	</bean>
	
	<!--.....................................-->
	<!--.................http................-->
	<!--.....................................-->
	<bean id="httpClientFactory" class="com.alibaba.webx.searchengine.factory.http.HttpClientFactory" init-method="init">
		<property name="maxConnectionNum">				<value>10</value> 			</property>	<!-- 最大连接数限制 -->
		<property name="maxGetConnectionTimeOut">		<value>5000</value> 		</property>	<!-- 最大获取连接超时限制 ，单位毫秒-->
		<property name="maxRouteConnectionNum">			<value>10</value> 			</property>	<!-- 每个路由最大的连接数限制 -->
		<property name="maxLastConnectionTimeOut">		<value>10000</value> 		</property>	<!-- 每个请求连接最长时间限制 ，单位毫秒-->
		<property name="maxGetDataTimeOut">				<value>5000</value> 		</property>	<!-- 获取数据最长时间限制，单位毫秒 -->
	</bean>
	
	
	<!--.....................................-->
	<!--................c3p0.................-->
	<!--.....................................-->
	<bean id="mysqlFactory" class="com.alibaba.webx.searchengine.factory.jdbc.MysqlFactory" init-method="init">
		<property name="diverName">					<value>com.mysql.jdbc.Driver</value> 				</property>
		<property name="databaseUrl">				<value>jdbc:mysql://localhost:3306/test</value> 	</property>
		<property name="databaseUser">				<value>root</value> 								</property>
		<property name="databasePssword">			<value>root</value> 								</property>
		<property name="minConnectionNuml">			<value>1</value> 									</property>	<!-- 最小连接数限制 -->
		<property name="maxConnectionNuml">			<value>10</value> 									</property>	<!-- 最大连接数限制 -->
		<property name="acquireIncreamentNum">		<value>1</value> 									</property>	<!-- 增加连接时一次性增加的连接数 -->
		<property name="testConnectionPeriod">		<value>30</value> 									</property>	<!-- 测试连接可用性的时间间隔 -->
		<property name="initConnectionNuml">		<value>1</value> 									</property>	<!-- 初始化连接池时创建的连接数 -->
		<property name="validate">					<value>true</value> 								</property>	<!-- 使用连接时是否测试连接是否可用 -->
	</bean>
	
	
	<!--.....................................-->
	<!--................mybatis..............-->
	<!--.....................................-->
	<!-- 写库 -->
	<bean id="dataSourceRW" class="org.logicalcobwebs.proxool.ProxoolDataSource">  
	    <property name="alias" value="ReadWriteDataBase"></property>  
	    <property name="delegateProperties">  
	        <value>user=root,password=root</value>  
	    </property>  
	    <property name="user" value="root" />  
	    <property name="password" value="root" />  
	    <property name="driver" value="com.mysql.jdbc.Driver" />  
	    <property name="driverUrl" value="jdbc:mysql://localhost:3306/test" />
	    <property name="minimumConnectionCount" value="5" />							<!-- 确定池中最小连接数 -->
	    <property name="houseKeepingTestSql" value="select user from mysql.user" />		<!-- 确定保证连接可能的定时查询SQL -->
	    <property name="testBeforeUse" value="true" />									<!-- 检测连接是否可以用，没用的话就换条连接 -->
	    <property name="maximumActiveTime" value="5" />									<!-- 确定连接的最大持续使用时间，超时断开，单位为分钟 -->
	    <property name="prototypeCount" value="2" />									<!-- 确定该连接被使用后，池中还有多少空闲连接，是否得重新创建新的备用，需要的话要创建多少个 -->
	    <property name="maximumConnectionLifetime" value="4" />							<!-- 确定在连接数大于最小连接数时，多出的空闲连接多久被杀死，单位为小时 -->
	    <property name="maximumConnectionCount" value="15" />							<!-- 确定一个阀门，规定池中最大连接数 -->
	    <property name="houseKeepingSleepTime" value="30" />							<!-- 确定多久检查连接的可用性，扫除无用的连接，创建新的可用连接，单位为秒 -->
	</bean>  
	<!-- 读库 -->
    <bean id="dataSourceR" class="org.logicalcobwebs.proxool.ProxoolDataSource">  
        <property name="alias" value="ReadDataBase"></property>  
     	<property name="delegateProperties">  
         	<value>user=test,password=123456</value>  
     	</property>  
    	<property name="user" value="root" />  
    	<property name="password" value="root" />  
    	<property name="driver" value="com.mysql.jdbc.Driver" />  
    	<property name="driverUrl" value="jdbc:mysql://localhost:3306/test" />
 		<property name="minimumConnectionCount" value="5" />
	    <property name="houseKeepingTestSql" value="select user from mysql.user" />
	    <property name="testBeforeUse" value="true" />
	    <property name="maximumActiveTime" value="5" />
	    <property name="prototypeCount" value="2" />
	    <property name="maximumConnectionLifetime" value="4" />
	    <property name="maximumConnectionCount" value="15" />
	    <property name="houseKeepingSleepTime" value="30" />
    </bean>  
   	<!-- 多数据源，引用写库 & 读库 -->
    <bean id="dynamicDataSource" class="com.alibaba.webx.searchengine.factory.mybatis.DynamicDataSource">  
        <!-- 通过key-value关联数据源 -->  
        <property name="targetDataSources">  
            <map>  
                <entry value-ref="dataSourceRW" key="dataSourceKeyRW"></entry>  
                <entry value-ref="dataSourceR" key="dataSourceKeyR"></entry>  
            </map>  
        </property>  
        <property name="defaultTargetDataSource" ref="dataSourceRW" />      
    </bean>  
   	<!-- sqlSeesion工厂，引用多数据源 -->
	<bean id="sqlsessionfactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
	    <property name="configLocation" value="classpath:mybatis/resource.xml" />  
	    <property name="dataSource" ref="dynamicDataSource" />  
	</bean>
	<bean id="myBatisFactory" class="com.alibaba.webx.searchengine.factory.mybatis.MyBatisFactory">
		<constructor-arg index="0" ref="sqlsessionfactory"></constructor-arg>
	</bean>
	<!-- Session模板 -->
	<bean id="sqlSessionWriteTemplate" class="com.alibaba.webx.searchengine.factory.mybatis.MySqlSessionTemplate">
		<constructor-arg index="0" ref="sqlsessionfactory"></constructor-arg>
		<!-- 与dynamicDataSource这个bean中配置的key对应 -->
		<constructor-arg index="1" > <value>dataSourceKeyRW</value> </constructor-arg>
	</bean>
	<bean id="sqlSessionReadTemplate" class="com.alibaba.webx.searchengine.factory.mybatis.MySqlSessionTemplate">
		<constructor-arg index="0" ref="sqlsessionfactory"></constructor-arg>
		<constructor-arg index="1" > <value>dataSourceKeyR</value> </constructor-arg>
	</bean>
	<!-- 注解事物的支持 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dynamicDataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="txManager" />
	
	
	<!--.....................................-->
	<!--................redis................-->
	<!--.....................................-->
	<bean id="redisFactory" class="com.alibaba.webx.searchengine.factory.redis.RedisFactory" init-method="init">
		<property name="poolMaxIdel">			<value>8</value> 				</property>	<!-- 控制一个pool最多有多少个状态为idle(空闲的)的jedis实例 -->
		<property name="poolMaxWaitMillis">		<value>5000</value> 			</property>	<!-- 获取连接时的最大等待时间，单位毫秒 ,默认值为-1，表示永不超时 -->
		<property name="poolTestOnBorrow">		<value>true</value> 			</property>	<!-- 是否在获取连接的时候检查有效性, 默认false -->
		<property name="poolIp">				<value>127.0.0.1</value> 		</property>	<!-- 数据库的地址 -->
		<property name="poolPort">				<value>6379</value> 			</property>	<!-- 数据库的端口 -->
		<property name="poolConnectTimeOut">	<value>5000</value> 			</property>	<!-- 连接持续连接的超时时间，单位毫秒-->
		<property name="poolPassword">			<value>123456</value> 			</property>	<!-- 数据库密码 -->
	</bean>
	
	
	<!-- =================================== -->
	<!-- 系统监听器							 -->
	<!-- =================================== -->
	<bean id="systemMonitor" class="com.alibaba.webx.searchengine.util.systemmonitor.SystemMonitor" init-method="init">
		<property name="cpuAlarmPercent">		<value>90</value>				</property>	<!-- 单位：百分比	意思：cpu使用率报警阀值	 -->
		<property name="cpuAlarmLastTime">		<value>10</value>				</property>	<!-- 单位：秒		意思：cpu持续超过报警阀值多久才报警。 -->
		
		<property name="memoryAlarmPercent">	<value>90</value>				</property>	<!-- 单位：百分比	意思：内存使用率报警阀值 -->
		<property name="memoryAlarmLastTime">	<value>10</value>				</property>	<!-- 单位：秒		意思：内存持续超过报警阀值多久才报警 -->
		
		<property name="diskAlarmPercent">		<value>90</value>				</property>	<!-- 单位：百分比	意思：磁盘使用率报警阀值 -->
		<property name="diskAlarmLastTime">		<value>10</value>				</property>	<!-- 单位：秒		意思：磁盘持续超过报警阀值多久才报警 -->
		
		<property name="netReceiveAlarmSpeed">	<value>400</value>				</property>	<!-- 单位：K/s	意思：网络接收速度报警阀值 -->
		<property name="netReceiveAlarmLastTime"><value>10</value>				</property>	<!-- 单位：秒		意思：网络接收速度持续超过报警阀值多久才报警 -->
		
		<property name="netSendAlarmSpeed">		<value>400</value>				</property>	<!-- 单位：K/s	意思：网络发送速度报警阀值 -->
		<property name="netSendAlarmLastTime">	<value>10</value>				</property>	<!-- 单位：秒		意思：网络发送速度持续超过报警阀值多久才报警 -->
		
		<!-- 要把错误推送给哪些邮箱 -->
		<property name="acceptorList">													
			<list>
				<value>xxxxx@163.com</value>
			</list>			
		</property>	
		<property name="emailTitle">	<value>XXX项目系统级错误推送</value>		</property>	<!-- 邮件标题 -->
		<property name="sendEmailRate">	<value>3000</value>						</property>	<!-- 多少秒发一次邮件 -->
		
	</bean>
</beans>